/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.10 ./public/models/fky3_room.glb 
*/

import React, { useEffect } from "react";
import { Html, useGLTF } from "@react-three/drei";
import { CuboidCollider, RigidBody } from "@react-three/rapier";
import "../styles/Fky3_room.css";
import "/audios/bgm_room.mp3"


export function Room(props) {
  const { nodes, materials } = useGLTF("/models/rooms3_t.glb");
  // useEffect(() => {
  // }, [materials]);
  
  return (
    <group {...props} dispose={null}>
      <RigidBody  type="fixed">
    
      </RigidBody>
    </group>
  );
}

export function Floor(props) {
  const { nodes, materials } = useGLTF("/models/rooms3_t.glb");
  return (
    <group {...props} dispose={null}  >
      <RigidBody  type="fixed" >
      <mesh castShadow receiveShadow geometry={nodes.floor1.geometry} material={materials.M_floor} />
      </RigidBody>
    </group>
  );
}




export function Wall(props) {
  const { nodes, materials } = useGLTF("/models/rooms3_t.glb");
  return (
    <group {...props} dispose={null} >
      <RigidBody  type="fixed" >
      <mesh castShadow receiveShadow geometry={nodes.wall.geometry} material={materials.M_wall} />
      <mesh castShadow receiveShadow geometry={nodes.wall1.geometry} material={materials.M_wall} />
      <mesh castShadow receiveShadow geometry={nodes.wall2.geometry} material={materials.M_wall} />
      <mesh castShadow receiveShadow geometry={nodes.wall3.geometry} material={materials.M_wall} />
      </RigidBody>
    </group>
  );
}

useGLTF.preload('/models/rooms3_t.glb')











